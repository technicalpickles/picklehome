version: '3'

services:
  mqtt:
    image: eclipse-mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mqtt-data:/mosquitto/data
      - ./mqtt/config:/mosquitto/config

  harmony-api:
    image: jonmaddox/harmony-api
    restart: always
    depends_on:
      - mqtt
    ports:
      - 8282:8282
    volumes:
      - ./harmony-api/config:/config
    network_mode: "host"

  home-assistant:
    image: homeassistant/home-assistant:0.74.0
    #build: ./homeassistant/src
    restart: always
    depends_on:
      - apcupsd
      - harmony-api
      - mqtt
      - sonos
      - influxdb
    ports:
      - 8123:8123
    volumes:
      - ./homeassistant/config:/config
    tty: true # so we get colors
    network_mode: "host"

  nginx:
    image: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - home-assistant
    network_mode: "host"

  avahi-alias:
    privileged: true # required for dbus access
    image: flqw/avahi-alias:latest
    volumes:
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
    command:
      - homeassistant.local

  sonos:
    image: chrisns/docker-node-sonos-http-api
    restart: always
    ports:
      - 5005:5005
    volumes:
      - ./sonos/settings:/app/settings
      - ./sonos/clips:/app/static/clips
      - sonos-cache:/app/cache
      - ./sonos/presets:/app/presets
    network_mode: "host"

  apcupsd:
    image: retrohunter/apcupsd-cgi
    restart: always
    ports:
      - 3551:3551
    devices:
      - /dev/usb/hiddev0:/dev/usb/hiddev0

  samba:
    image: dperson/samba
    restart: always
    command: -n -s videos;/mount/videos -g "netbios name = picklehome" -u kodi;${SAMBA_KODI_PASSWORD}
    ports:
      - 137:137/udp
      - 138:138/udp
      - 139:139
      - 445:445
    volumes:
      - ./data:/mount:ro
    network_mode: "host"

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus-data
    network_mode: "host"

  influxdb:
    image: influxdb:1.4
    container_name: influxdb
    ports:
      - 8086:8086
      - 8083:8083
    volumes:
      - influxdb-data:/var/lib/influxdb
      # NOTE if you don't have one, you can use:
      #   docker run --rm influxdb influxd config > influxdb.conf
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
    command: -config /etc/influxdb/influxdb.conf
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    command: --config /etc/grafana/grafana.ini
    depends_on:
      - influxdb
      - prometheus
    restart: always

  airconnect:
    restart: always
    build: airconnect
    network_mode: host
    command:
      - "-d"
      - all=info
      - "-b"
      - ":49152"
      - "-x"
      - /config/config.xml
      - "-Z"
    volumes:
      - ./airconnect/config:/config

  plex:
    container_name: plex
    image: plexinc/pms-docker
    restart: unless-stopped
    environment:
      - TZ
      - PLEX_CLAIM
    network_mode: host
    volumes:
      - plex-config:/config
      - plex-transcode:/transcode
      - ./data:/data

volumes:
  mqtt-data:
  sonos-cache:
  prometheus-data:
  plex-transcode:
  plex-config:
  influxdb-data:
  grafana-data:
